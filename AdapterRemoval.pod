#!/usr/bin/perl -w

=head1 NAME

AdapterRemoval - Remove adapters from sequences in either single end or paired end experiments

=head1 SYNOPSIS

B<AdapterRemoval> [--file|file1 filename] [--file2 filename] [--basename filename]
[--trimns] [--maxns max] [--trimqualities] [--minquality minimum] [--collapse] [--stats] [--version]
[--mm mismatchrate] [--minlength len] [--minalignmentlength len] [--qualitybase base] [--shift num]
[--pcr1 sequence] [--pcr2 sequence] [--5prime sequence]
[--output1 file] [--output2 file] [--outputstats file] [--singleton file] [--outputcollapsed file] [--singletonstats file] [--discarded file] [--settings file]

=head1 DESCRIPTION

B<AdapterRemoval> reads either one fastq file (single end) or two fastq files (paired end). It removes the residual adapter sequence from the reads and optionally trims Ns from the reads, lowest qualities from the quality string, looks for adapter in the 5' end, and collapses overlapping reads into one read. Reads are discarded if the remaining genomic part is too short.

Some additional info: The reads and adapters are transformed to upper case for comparison. The program tries to check for nonsensical combinations of parameters but please report strange behaviour, bugs and whatnots to stinus@binf.ku.dk

=head1 OPTIONS

=over 9

=item B<--file> I<filename> (or B<--file1> I<filename>)

Read fastq file I<filename> instead of standard input (stdin). This contains either the single end reads or, if paired end, the mate1 reads. If running in paired end mode, both file1 and file2 must be set.

=item B<--file2> I<filename>

Read fastq file I<filename> containing mate2 reads of a paired end run.

=item B<--basename> I<filename>

Dependent on the settings, the program will generate output files with names I<filename.pair1.truncated>, I<filename.pair2.truncated>, I<filename.pair.stats>, I<filename.singleton.truncated>, I<filename.singleton.stats>, I<filename.discarded> and I<filename.settings>. Default basename is I<your_output>.

=item B<--trimns>

Remove stretches of Ns from the output reads in both the 5' and 3' end.

=item B<--maxns> I<max>

If a read has more than I<max> Ns after trimming, it is discarded (default is not to use).

=item B<--trimqualities>

Remove consecutive stretches of low quality bases (threshold set by I<minquality>) from both the 5' and 3' end of the reads. All bases with I<minquality> or lower are trimmed.

=item B<--minquality> I<minimum>

Set the threshold for trimming low quality bases. Default is 2. The minimum can be set with or without the Phred quality base.

=item B<--collapse>

Only in paired end mode. If the two mates overlap, collapse the two reads into one read by merging the two and recalculating the quality scores. The overlap needs to be at least I<minalignmentlength> nucleotides.

=item B<--stats>

Output statistics on trimming of Ns and qualities, removal of adapters etc. The statistics will be written to I<.stats> files.

=item B<--version>

Output the version of the program.

=item B<--mm> I<mismatchrate>

The allowed fraction of mismatches allowed in the aligned region. If 0 < I<mismatchrate> < 1, the rate is used directly. If I<mismatchrate> > 1, the rate is set to 1/I<mismatchrate>. The default setting is 1/3 for single end use and 0.1 for paired end use (because the paired end alignments are longer).

=item B<--minlength> I<len>

The minimum length required after trimming and adapter removal. Reads shorter than I<len> are discarded. Default is 15 nucleotides.

=item B<--minalignmentlength> I<len>

Only in paired end mode. The minimum overlap between mate1 and mate2 before the reads are collapsed into one. Default is 11 nucleotides.

=item B<--qualitybase> I<base>

The base of the quality score - either Phred+64 (i.e., Illumina 1.3+ and 1.5+) or Phred+33 (Illumina 1.8+). Default is Phred+33.

=item B<--shift> I<num>

To allow for missing bases in the 5' end of the read, the program can let the alignment slip I<num> bases in the 5' end. This corresponds to starting the alignment maximum I<num> nucleotides in read2 (for paired end) or the adapter (for single end). The default shift valule is 2.

=item B<--pcr1> I<sequence>

Use I<sequence> when looking for adapter. In single end mode only pcr1 is used, The defaults are AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG for single end use and AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT for paired end use.

=item B<--pcr2> I<sequence>

Only in paired end mode. Use the reverse complement of I<sequence> when removing adapter. The default is AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG

=item B<--5prime> I<sequence>

If specified, the program will look for matches to the sequence in the 5 prime end of the reads first. These matches are expected to be near perfect (very few mismatches) and often full length, although some missing nucleotides are allowed (controlled by the B<--shift> parameter).

=item B<--output1> I<file>

=item B<--output2> I<file>

=item B<--outputstats> I<file>

=item B<--singleton> I<file>

=item B<--outputcollapsed> I<file>

=item B<--singletonstats> I<file>

=item B<--discarded> I<file>

=item B<--settings> I<file>

Instead of using the default behaviour where the program automatically generates the files needed, you can specify where each type of output is directed. This can be files, pipes etc. thus making it possible to easily zip the output on the fly. Default files are still generated if nothing else is specified. 

The types of output in single end mode are:

I<output1> contains the trimmed reads.

I<outputstats> (if I<--stats> is used) contains information on trimming etc. for each read in output1.

I<discarded> contains all reads that are discarded by the program, including information on trimming, genomic length etc.

I<settings> contains information on the parameters used in the run as well as overall statistics on the reads after trimming such as average length.

The types of output in paired end mode are:

I<output1> contains trimmed mate1 reads.

I<output2> contains trimmed mate2 reads.

I<outputstats> (if I<--stats> is used) contains information on trimming etc. for each pair in output1/output2.

I<singleton> contains all reads where the other mate in a pair is discarded.

I<outputcollapsed> Contains pairs that overlap and are collapsed into a single read (if I<--collapse> is used).

I<singletonstats> (if I<--stats> is used) contains information on trimming etc. for each read in I<singleton> and I<outputcollapsed>.

I<discarded> contains all reads that are discarded by the program, including information on trimming, genomic length etc.

I<settings> contains information on the parameters used in the run as well as overall statistics on the reads after trimming such as average length.


=back


=head1 EXAMPLE: Single end experiment.

The following command removes adapters from the file I<experiment.fq.bz2> that has been zipped using bzip2, trims both Ns and low qualities from the reads, uses quality base 33 (default), saves the discarded reads in file I<experiment.discarded>, and puts the trimmed reads into a bzipped file (written to I<stdout> per default in single end mode):

bzcat experiment.fq.bz2 | AdapterRemoval --trimns --trimqualities --discarded test.discarded | bzip2 > experiment.truncated.fq.bz2


=head1 EXAMPLE: Paired end experiment.

The following command removes adapters from a paired end experiment where the reads are kept in files I<experiment.pair1.fq> and I<experiment.pair2.fq>. The reads are trimmed for both Ns and low qualities, overlapping reads (at least 11 nucleotides per default) are collapsed, and the qualities use base 64. Output files use basename I<experiment>:

AdapterRemoval --file1 experiment.pair1.fq --file2 experiment.pair2.fq --trimns --trimqualities --collapse --qualitybase 64 --basename experiment

This command would generate files I<experiment.pair1.truncated> and I<experiment.pair2.truncated> containing the trimmed reads in pairs, I<experiment.singleton.truncated> containing collapsed read pairs and reads where one mate is discarded, and I<experiment.discarded> containing the reads that did not pass the tests.

=head1 EXAMPLE: Paired end experiment using more complex output.

The following command works as above, except that it now reads input files that are compressed using bzip2, and the truncated reads are compressed as well. The discarded reads are, well, discarded by redirecting them to /dev/null:

AdapterRemoval --file1 <(bzcat experiment.pair1.fq.bz2) --file2 <(bzcat experiment.pair2.fq.bz2) --trimns --trimqualities --collapse --qualitybase 64 --output1 >(bzip2 > experiment.pair1.truncated.bz2) --output2 >(bzip2 > experiment.pair2.truncated.bz2) --singleton >(bzip2 > experiment.singleton.truncated.bz2) --discarded /dev/null

=head1 EXIT STATUS

0 if everything worked as planned. 1 otherwise.

=head1 REPORTING BUGS

Report bugs to Stinus Lindgreen <stinus@binf.ku.dk>.

Your bugreport should always include:

=over 2

=item *

The output of B<AdapterRemoval --version>. If you are not running the
latest released version you should specify why you believe the problem
is not fixed in that version.

=item *

A complete example that others can run that shows the problem.

=back


=head1 AUTHOR

Copyright (C) 2011 Stinus Lindgreen <stinus@binf.ku.dk>.

Parts of the manual was written by Ole Tange <tange@binf.ku.dk>.


=head1 LICENSE

Copyright (C) 2011 Stinus Lindgreen <stinus@binf.ku.dk>.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
at your option any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=head1 SEE ALSO



=cut
