#!/usr/bin/perl -w

=head1 NAME

AdapterRemoval - Remove adapters from sequences in either single end or paired end experiments

=head1 SYNOPSIS

B<AdapterRemoval> --file1 filename [--file2 filename] [--basename filename] [--identify-adapters] [--trimns] [--maxns max] [--trimqualities] [--minquality minimum] [--collapse] [--version] [--mm mismatchrate] [--minlength len] [--minalignmentlength len] [--qualitybase base] [--qualitybase-output base] [--shift num] [--adapter1 sequence] [--adapter2 sequence] [--adapter-list filename] [--barcode-list filename] [--barcode-mm num] [--barcode-mm-r1 num] [--barcode-mm-r2 num] [--output1 filename] [--output2 filename] [--singleton filename] [--outputcollapsed filename] [--outputcollapsedtruncated filename] [--discarded filename] [--settings filename] [--seed seed] [--gzip] [--gzip-level level] [--threads num] [--version] [--help]


=head1 DESCRIPTION

B<AdapterRemoval> reads either one FASTQ file (single ended mode) or two FASTQ files (paired ended mode). It removes the residual adapter sequence from the reads and optionally trims Ns from the reads, and low qualities bases using the quality string, looks for specific sequences at the 5' end, and collapses overlapping paired ended mates into one read. Reads are discarded if the remaining genomic part is too short, or if the read contains more than an (user specified) amount of amigious nucleotides ('N').

Alternatively, B<AdapterRemoval> may attempt to reconstruct a consensus adapter sequences from paired-ended data, in order to allow the identification of the adapter sequences originally used, and thereby ensure proper trimming of these reads.

The reads and adapters are transformed to upper case for comparison. It is assumed that the letter 'N' is used for an unknown nucleotide, but in case the program encounters a '.' in the sequence, they will be treated as (and translated into) Ns. The program tries to check for invalid input and / or nonsensical combinations of parameters but please report strange behaviour, bugs and whatnots to MSchubert@snm.ku.dk

If you use this program, please cite the paper:
Stinus Lindgreen (2012): AdapterRemoval: easy cleaning of next-generation sequencing reads. BMC Res Notes, 5:337. doi: 10.1186/1756-0500-5-337.

=head1 OPTIONS

=over 9

=item B<--file1> I<filename>

Read FASTQ reads from file I<filename>. This contains either the single ended (SE) reads or, if paired ended, the mate 1 reads. If running in paired end mode, both file1 and file2 must be set. The file may be gzip compressed.

=item B<--file2> I<filename>

Read FASTQ file I<filename> containing mate 2 reads for a paired end run. The file may be gzip compressed.

=item B<--basename> I<filename>

Determines the default filename for output files, unless overridden using the specific output file settings. For single-ended mode, the following filenames are used: I<filename.truncated>, I<filename.discarded>, and I<filename.settings>. In paired end mode, the following filenames are used: I<filename.pair1.truncated>, I<filename.pair2.truncated>, I<filename.singleton.truncated>, I<filename.discarded>, and I<filename.settings>. If collapsing of reads is enabled for paired ended mode, the following filenames are also used: I<filename.collapsed>, and I<filename.collapsed.truncated>. The default basename is I<output>. If gzip compression is enabled, the extension ".gz" is added to all files but the I<filename.settings> file.

=item B<--identify-adapters>

For paired ended reads only. In this mode, AdapterRemoval will to reconstruct the adapter sequences used for a set of paired ended reads, by locating fully overlapping read-pairs, and generating a consensus sequence from the bases identified as adapter sequence. The minimum overlap is controlled by I<minalignmentlength>. The --adapter* command-line options are not used in this mode.

=item B<--trimns>

Remove stretches of Ns from the output reads in both the 5' and 3' end. If quality trimming is also enabled, stretches of mixed low-quality bases and/or Ns are trimmed.

=item B<--maxns> I<max>

If a read has more than I<max> Ns after trimming, it is discarded (default is not to use).

=item B<--trimqualities>

Remove consecutive stretches of low quality bases (threshold set by I<minquality>) from both the 5' and 3' end of the reads. All bases with I<minquality> or lower are trimmed. If trimming of Ns is also enabled, stretches of mixed low-quality bases and/or Ns are trimmed.

=item B<--minquality> I<minimum>

Set the threshold for trimming low quality bases. Default is 2. The minimum can be set with or without the Phred quality base.

=item B<--collapse>

Only in paired end mode. If the two mates overlap, collapse the two reads into one read by merging the two and recalculating the quality scores. The overlap needs to be at least I<minalignmentlength> nucleotides, with a maximum number of mismatches determined by I<mm>.

=item B<--mm> I<mismatchrate>

The allowed fraction of mismatches allowed in the aligned region. If 0 < I<mismatchrate> < 1, the rate is used directly. If I<mismatchrate> > 1, the rate is set to 1/I<mismatchrate>. The default setting is 1/3 for single end use and 0.1 for paired end use (because the paired end alignments are longer).

=item B<--minlength> I<len>

The minimum length required after trimming and adapter removal. Reads shorter than I<len> are discarded. Default is 15 nucleotides.

=item B<--minalignmentlength> I<len>

Only in paired end mode. The minimum overlap between mate 1 and mate 2 before the reads are collapsed into one. Default is 11 nucleotides.

=item B<--qualitybase> I<base>

The base of the quality score - either '64' for Phred+Phred (i.e., Illumina 1.3+ and 1.5+) or '33' for Phred+33 (Illumina 1.8+). In addition, the value 'solexa' may be used to specify reads with Solexa encoded scores. Default is 33.

=item B<--qualitybase-output> I<base>

The base of the quality score for reads written by AdapterRemoval - either '64' for Phred+Phred (i.e., Illumina 1.3+ and 1.5+) or '33' for Phred+33 (Illumina 1.8+). Default is 33.

=item B<--shift> I<num>

To allow for missing bases in the 5' end of the read, the program can let the alignment slip I<num> bases in the 5' end. This corresponds to starting the alignment maximum I<num> nucleotides in read2 (for paired end) or the adapter (for single end). The default shift valule is 2.

=item B<--adapter1> I<sequence>

=item B<--adapter2> I<sequence>

Specify the adapter sequences that you wish to trim. The Adapter #2 sequence is only used when trimming paired-ended data.

The Adapter #1 and Adapter #2 sequences are expected to be found in the mate 1 and the mate 2 reads respectively, while ignoring any difference in case and treating Ns as wildcards. The default sequences are

Adapter #1: AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG

Adapter #2: AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT

Assuming these were the adapters used to generate our data, we should therefore see these in the FASTQ files:

  $ grep -i "AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC......ATCTCGTATGCCGTCTTCTGCTTG" file1.fq
  B<AGATCGGAAGAGCACACGTCTGAACTCCAGTCACCGATGAATCTCGTATGCCGTCTTCTGCTTG>AAAAAAAAACAAGAAT
  CTGGAGTTCB<AGATCGGAAGAGCACACGTCTGAACTCCAGTCACCGATGAATCTCGTATGCCGTCTTCTGCTTG>AAAAAAA
  GGB<AGATCGGAAGAGCACACGTCTGAACTCCAGTCACCGATGAATCTCGTATGCCGTCTTCTGCTTG>CAAATTGAAAACAC
  ...

  $ grep -i "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT" file2.fq
  CB<AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT>CAAAAAAAGAAAAACATCTTG
  GAACTCCAGB<AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT>CAAAAAAAATAGA
  GAACTB<AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT>CAAAAACATAAGACCTA
  ...

Note that --adapter1 and --adapter2 replaces the --pcr[12] options of B<AdapterRemoval> v1.x, for which the --pcr2 sequence was expected to be reverse complemented compared --adaper2. Using the --pcr[12] options is not recommended!


=item B<--adapter-list> I<filename>

Read one or more PCR sequences from a file. The first two columns (seperated by whitespace) of each line in the file are expected to correspond to values passed to --adapter1 and --adapter2. In single ended mode, only column one is required. Lines starting with '#' are ignored. When multiple pcr sequences are specified, AdapterRemoval will try each and select the best aligning adapters for each read processed.

=item B<--barcode-list> I<filename>

Read a table of one or two fixed-length barcodes and perform demultiplexing of single or double indexed reads. The table is expected to contain 2 or 3 columns, the first of which represent the name of a given sample, and the second and third of which represent the mate 1 and (optionally) the mate 2 barcode sequence:

    $ cat barcodes.txt
    sample_1 ATGCGGA TGAATCT
    sample_2 ATGGATT ATAGTGA
    sample_7 CAAAACT TCGCTGC

Results are written to ${basename}.${sample_name}.*, using the default names for other output files. A setting file with statistics is written for each sample at ${basename}.${sample_name}.settings, as is a setting file containing the demultiplexing statistics, at ${basename}.settings.

When demultiplexing is used, the barcode identified for a given read is automatically added to the adapter sequence, in order to ensure that overlapping reads are correctly trimmed. The .settings file represents this by showing the reverse complemented) barcode sequence added to the --adapter1 and --adapter2 sequences, followed by an underscore (shown here for barcodes pair ATGCGGA / TGAATCT):

    [Adapter sequences]
    Adapter1[0]: AGATTCA_AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG
    Adapter2[0]: TCCGCAT_AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT

Note that the sequence added to each adapter is the reverse complement of the barcode sequence of the other mate, as this sequence is expected to be found immediately before the adapter sequence.


=item B<--barcode-mm> I<num>

The maximum number of mismatches allowed for barcodes, when counting mismatches in I<both> the mate 1 and mate 2 barcodes. In conjunction with the --barcode-mm-r1 and --barcode-mm-r2, this allows fine-grained control over the barcode comparisons. If not set, this value is set to the sum of --barcode-mm-r1 and --barcode-mm-r2.

For example, to allow one mismatch in either the mate 1 or the mate 2 barcode, one might specify --barcode-mm 1; to allow a mismatch in the mate 1 and / or the mate 2 barcode, one might specify --barcode-mm 2 --barcode-mm-r1 1 --barcode-mm-r2 1, and so on.

=item B<--barcode-mm-r1> I<num>

The maximum number of mismatches allowed in the mate 1 barcode; if not set, this number is equal to the value of --barcode-mm. This number cannot exceed the value specified for --barcode-mm.

=item B<--barcode-mm-r2> I<num>

The maximum number of mismatches allowed in the mate 1 barcode; if not set, this number is equal to the value of --barcode-mm. This number cannot exceed the value specified for --barcode-mm.

=item B<--output1> I<file>

=item B<--output2> I<file>

=item B<--singleton> I<file>

=item B<--outputcollapsed> I<file>

=item B<--outputcollapsedtruncated> I<file>

=item B<--discarded> I<file>

=item B<--settings> I<file>

Instead of using the default behaviour where the program automatically generates the files needed, you can specify where each type of output is directed. This can be files, pipes etc. thus making it possible to easily zip the output on the fly. Default files are still generated if nothing else is specified.

The types of output in single end mode are:

I<output1> contains the trimmed reads.

The types of output in paired end mode are:

I<output1> contains trimmed mate1 reads.

I<output2> contains trimmed mate2 reads.

I<singleton> contains all reads where the other mate in a pair is discarded.

I<outputcollapsed> Contains pairs that overlap and are collapsed into a single read (if I<--collapse> is used). The reads are renamed with an @M_ prefix.

I<outputcollapsed> Contains pairs that overlap and are collapsed into a single read (if I<--collapse> is used) and have further been trimmed due to Ns and/or low quality nucleotides in the 5' or 3' end. The reads are renamed with an @MT_ prefix.

The types of output in both single end and paired end mode are:

I<discarded> contains all reads that are discarded by the program.

I<settings> contains information on the parameters used in the run as well as overall statistics on the reads after trimming such as average length.

=item B<--seed> I<seed>

When collaping reads at positions where the two reads differ, and the quality of the bases are identical, AdapterRemoval will select a random base. This option specifies the seed used for the random number generator used by AdapterRemoval. This value is also written to the settings file.

=item B<--gzip>

If set, all FASTQ files written by AdapterRemoval will be gzip compressed using the compression level specified using I<--gzip-level>. The extension ".gz" is added to files for which no filename was given on the commandline.

=item B<--gzip-level>

Determines the compression level used when gzip'ing FASTQ files. Must be a value in the range 0 to 9, with 0 disabling compression and 9 being the best compression. Defaults to 6.

=item B<--threads>

Maximum number of threads to use for current run; note that file IO is single-threaded, regardless of the number of threads specified.

=item B<--version>

Output the version of the program.

=item B<--help>

Output the summary of available command-line options, including default values and/or values specified on the command-line.


=back


=head1 EXAMPLE: Single end experiment

The following command removes adapters from the file I<experiment.fq.bz2> that has been compressed using gzip, trims both Ns and low qualities from the reads, uses quality base 33 (default), saves the discarded reads in file I<experiment.discarded>, and puts the trimmed reads into a gzipped file (written to I<stdout> per default in single end mode):

  $ AdapterRemoval --file1 experiment.fq.gz --basename my_trimmed_reads --trimns --trimqualities --gzip

Since --gzip and --basename is specified, the trimmed FASTQ reads are written to 'my_trimmed_reads.truncated.gz', the dicarded FASTQ reads are written to 'my_trimmed_reads.discarded.gz', and the settings are written to 'my_trimmed_reads.settings'.


=head1 EXAMPLE: Paired end experiment.

The following command removes adapters from a paired end experiment where the reads are kept in files I<experiment.pair1.fq.gz> and I<experiment.pair2.fq.gz>. The reads are trimmed for both Ns and low qualities, overlapping reads (at least 11 nucleotides per default) are collapsed, and the qualities use base 64. Output files use basename I<experiment>:

  $ AdapterRemoval --file1 experiment.pair1.fq.gz --file2 experiment.pair2.fq.gz --trimns --trimqualities --collapse --qualitybase 64 --basename experiment

This command would generate files I<experiment.pair1.truncated> and I<experiment.pair2.truncated> containing the trimmed reads in pairs, I<experiment.singleton.truncated> containing collapsed read pairs and reads where one mate is discarded, and I<experiment.discarded> containing the reads that did not pass the tests.

=head1 EXAMPLE: Paired end experiment using more complex output.

The following command works as above, except that it now reads input files that are compressed using bzip2, and the truncated reads are compressed as well. The discarded reads are, well, discarded by redirecting them to /dev/null:

  $ AdapterRemoval --file1 <(bzcat experiment.pair1.fq.bz2) --file2 <(bzcat experiment.pair2.fq.bz2) --trimns --trimqualities --collapse --settings experiment.settings --qualitybase 64 --output1 >(bzip2 > experiment.pair1.truncated.bz2) --output2 >(bzip2 > experiment.pair2.truncated.bz2) --singleton >(bzip2 > experiment.singleton.truncated.bz2) --outputcollapsed >(bzip2 > experiment.collapsed.bz2) --outputcollapsedtruncated >(bzip2 > experiment.collapsed.truncated.bz2) --discarded /dev/null


=head1 EXAMPLE: Identifying adapter sequences from paired-ended reads

If we did not know the adapter sequences for the I<experiment.*.fq.gz> files, AdapterRemoval may be used to generate a consensus adapter sequence based on fragments identified as belonging to the adapters based on pairwise alignments of the reads.

In the following example, the identified adapters corresponds to the default adapter sequences with a poly-A tail resulting from sequencing past the end of the insert + templates. It is not nessesary to specify this tail when using the --adapter1 or --adapter2 command-line options. The characters shown under each of the consensus sequences represented the phred-encoded fraction of bases identical to the consensus base, with adapter 1 containing the barcode CGATGA:

  $ ~/research/tools/adapterremoval-dev/build/AdapterRemoval --identify-adapters --file1 experiment.pair1.fq.gz --file2 experiment.pair2.fq.gz

  Attemping to identify adapter sequences ...
  Processed last 1,000,000 pairs in 14.3s; 30,000,000 pairs in 7:25.4s ...
  Processed a total of 30,036,785 pairs in 7:25.9s ...
     Found 26793756 overlapping pairs ...
     Of which 22919286 contained adapter sequence(s) ...

  Printing adapter sequences, including poly-A tails:
    --adapter1:  AGATCGGAAGAGCACACGTCTGAACTCCAGTCACTAGATGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAAAAAAAAAAAAAA
                 298869977756474655355455455233234343323221,333234241212731301730/000//++)'%$####"""""""

      Top 5 most common 12-bp 5'-kmers:
              1: AGATCGGAAGAG = 94.29% (20347167)
              2: GGATCGGAAGAG =  1.15% (248190)
              3: CGATCGGAAGAG =  0.46% (100082)
              4: AGATTGGAAGAG =  0.26% (55780)
              5: AGATCGGAAGCG =  0.21% (45037)


    --adapter2:  AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                 565636656434251341412554143213,30322303132032/11221/1201432333321.+*'%%$$######""""""""

      Top 5 most common 12-bp 5'-kmers:
              1: AGATCGGAAGAG = 94.35% (20280766)
              2: AGATCGGAAGGG =  0.22% (47155)
              3: AGATCGGAAAAG =  0.21% (44616)
              4: AGATAGGAAGAG =  0.20% (43593)
              5: AGATCGGGAGAG =  0.17% (37479)

=head1 EXIT STATUS

0 if everything worked as planned. 1 otherwise.

=head1 REPORTING BUGS

Report bugs to Mikkel Schubert <MSchubert@snm.ku.dk>.

Your bugreport should always include:

=over 2

=item *

The output of B<AdapterRemoval --version>. If you are not running the
latest released version you should specify why you believe the problem
is not fixed in that version.

=item *

A complete example that others can run that shows the problem.

=back


=head1 AUTHOR

Copyright (C) 2011 Stinus Lindgreen <stinus@binf.ku.dk>.

Parts of the manual was written by Ole Tange <tange@binf.ku.dk>.

Parts of the manual was written by Mikkel Schubert <MSchubert@snm.ku.dk>.


=head1 LICENSE

Copyright (C) 2011 Stinus Lindgreen <stinus@binf.ku.dk>.

Copyright (C) 2014 Mikkel Schubert <MSchubert@snm.ku.dk>.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
at your option any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=head1 SEE ALSO



=cut
